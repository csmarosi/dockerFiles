#!/bin/bash
set -euxo pipefail

imageWithTag="${1}"
imageName=$(echo ${imageWithTag} | cut -d: -f1)
shift

mountDirs="-v ${HOME}/dockerVolumes/dothome:${HOME}"
mountDirsFile=${HOME}/dockerVolumes/${imageName}.vol
if echo ${imageName} | grep -qE 'chrom(e|ium)|^root_'; then
    mountDirs=''
fi
if [ -s ${mountDirsFile} ]; then
    mountDirs="$(eval echo $(cat ${mountDirsFile}))"
fi
hostName=$(echo ${imageName} | sed 's/_//g')
runOptions="--hostname=${hostName} --name=${hostName} --rm -it"
groupId=$(id -g)
userId=$(id -u)

networkOptions='-P'
exposePortsFile=${HOME}/dockerVolumes/${imageName}.port
if [ -s ${exposePortsFile} ]; then
    networkOptions="$(cat ${exposePortsFile})"
fi

#For some reason grepping in `docker ps` output is not reliable
docker ps --no-trunc > /tmp/dockerps
if [ $# -gt 0 ] && grep -qE "^${1}|${1}$" /tmp/dockerps; then
    networkOptions="--net=container:${1}"
    runOptions="$(echo ${runOptions} | sed 's!--hostname=[^ ]*!!')"
    shift
fi
runCommand="${@}"
if [ -n "${runCommand}" ]; then
    filePath=$(readlink -f "${runCommand}")
    if [ -f "${filePath}" ]; then
        dirName=$(dirname "${filePath}")
        mountDirs="${mountDirs} -v ${dirName}:/magic:ro"
        runCommand=$(basename "${filePath}")
    fi
fi

if [[ ${imageName} == *"gui" ]]; then
    XDisplay=$(echo ${mountDirs} | grep -o -- '-unix/X[0-9]*:' | tail -n1 || true)
    if echo ${XDisplay} | grep -q '/X'; then
        DISPLAY=:$(echo ${XDisplay} | grep -o '[0-9]*')
    fi
    if [[ "${DISPLAY-}" == ":0" ]]; then
        xhost local:
        mountDirs="${mountDirs} -v /tmp/.X11-unix/X0:/tmp/.X11-unix/X0:ro"
    fi
fi

if [[ ${imageName} == "root"* ]]; then
    userId=0
    groupId=0
    runOptions="$(echo ${runOptions} | sed 's!--rm!!')"
fi

if echo ${imageName} | grep -qE '^(chrom|firefox)' ; then
    # Chrome leaks hostname: https://isc.sans.edu/diary/Google+Chrome+and+(weird)+DNS+requests/10312
    runOptions="$(echo ${runOptions} | sed 's!--hostname=[^ ]*!!')"
    #TODO: check this after chromium issue 522853 is closed
    tmpDir=$(mktemp -d --tmpdir=/dev/shm)
    mountDirs="${mountDirs} -v ${tmpDir}:/dev/shm"
    # Use only 1 CPU
    runOptions="${runOptions} --cpuset-cpus=0"
fi


if [ ${userId} != 0 ]; then
    mountDirs="${mountDirs} -v /etc/passwd:/etc/passwd:ro"
    mountDirs="${mountDirs} -v /etc/group:/etc/group:ro"
else
    HOME=/root
    runOptions="${runOptions} -d"
fi

# support for non-interactive mode (i.e. crontab)
if [[ ! -t 1 ]] || [ ${userId} == 0 ]; then
    runOptions="$(echo ${runOptions} | sed 's!-it!!')"
fi

homeBind=$(echo ${mountDirs} | grep -o "[^ ]*:${HOME} " | cut -d: -f1) || true
test -n "${homeBind}" && cd ${homeBind} && timeout 3 git pull || true

#Do not try to start non-local image
docker images | awk '{print $1":"$2}' | grep "${imageWithTag}"

exec docker run ${runOptions} -u=${userId}:${groupId} \
    -e HOME=${HOME} -e DISPLAY=${DISPLAY-} -e SHELL=${SHELL} \
    -e QT_X11_NO_MITSHM=1 -e PULSE_SERVER=${PULSE_SERVER-} \
    -e dockerImageName=${imageName} \
    ${networkOptions} \
    ${mountDirs} \
    ${imageWithTag} ${runCommand}

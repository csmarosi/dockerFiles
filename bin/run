#!/bin/bash
set -e
set -x

docker images | sort
test -n "${1}"
imageName=${1}
shift

mountDirs="-v ${HOME}/dockerVolumes/dothome:${HOME}"
mountDirsFile=${HOME}/dockerVolumes/${imageName}.vol
if [ -s ${mountDirsFile} ]; then
    mountDirs="$(cat ${mountDirsFile})"
fi
exposePorts='-P'
exposePortsFile=${HOME}/dockerVolumes/${imageName}.port
if [ -s ${exposePortsFile} ]; then
    exposePorts="$(cat ${exposePortsFile})"
fi
runOptions="--hostname=${imageName} --rm -it"
groupId=$(id -g)
userId=$(id -u)
runCommand=''


if [ -n "${1}" ]; then
    filePath=$(readlink -f "${1}")
    if [ -f ${filePath} ]; then
        shift
        dirName=$(dirname "${filePath}")
        mountDirs="${mountDirs} -v ${dirName}:/magic:ro"
        runCommand=$(basename "${filePath}")
        test -z "${1}"
    else
        runCommand="${@}"
    fi
fi

if [[ ${imageName} == "wine"* ]]; then
    runOptions="${runOptions} --device /dev/dri"
    groupId=$(awk -F: '/^video:/{print $3}' /etc/group)
fi

if [[ ${imageName} == *"gui" ]] && [[ "${DISPLAY}" == ":0" ]]; then
    xhost local:
    mountDirs="${mountDirs} -v /tmp/.X11-unix/X0:/tmp/.X11-unix/X0:ro"
fi

if [[ ${imageName} == "dev"* ]]; then
    mountDirs="${mountDirs} -v ${HOME}/github_projects:${HOME}/github_projects"
fi

if [[ ${imageName} == "root"* ]]; then
    userId=0
    groupId=0
    runOptions="$(echo ${runOptions} | sed 's!--rm!!')"
fi

if [[ ${imageName} == "chromium"* ]]; then
    #TODO: check this after chromium issue 522853 is closed
    tmpDir=$(mktemp -d --tmpdir=/dev/shm)
    mountDirs="${mountDirs} -v ${tmpDir}:/dev/shm"
    runOptions="${runOptions} " #--cap-add SYS_ADMIN"
    # Don't take the port if run trough a socket
    if [[ "${DISPLAY}" == ":0" ]]; then
        exposePorts=''
    fi
    #Allow only one instance
    if docker ps --no-trunc | grep -o "${runCommand}\"" | grep chromium ; then
        exit 42
    fi
    #TODO: limitation: works only if no other command is passed to the image
    if docker ps --no-trunc | grep "${runCommand}" ; then
        runOptions="$(echo ${runOptions} | sed 's!--hostname=[^ ]*!!')"
        runOptions="--net=container:${runCommand} ${runOptions}"
        runCommand=''
    fi
fi

#TODO: make this work with tor
if [[ ${imageName} == *"openvpn"* ]]; then
    runOptions="${runOptions} --privileged"
fi

if [[ ${imageName} == "playground"* ]]; then
    runOptions="$(echo ${runOptions} | sed 's!--rm!!')"
fi


if [ ${userId} != 0 ]; then
    mountDirs="${mountDirs} -v /etc/passwd:/etc/passwd:ro"
    mountDirs="${mountDirs} -v /etc/group:/etc/group:ro"
else
    HOME=/root
    runOptions="${runOptions} -d"
fi

# support for non-interactive mode (i.e. crontab)
if [[ ! -t 1 ]] || [ ${userId} == 0 ]; then
    runOptions="$(echo ${runOptions} | sed 's!-it!!')"
fi

exec docker run ${runOptions} -u=${userId}:${groupId} \
    -e HOME=${HOME} -e DISPLAY=${DISPLAY} -e SHELL=${SHELL} \
    -e QT_X11_NO_MITSHM=1 -e PULSE_SERVER=${PULSE_SERVER} \
    ${exposePorts} \
    ${mountDirs} \
    ${imageName} ${runCommand}

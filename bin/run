#!/bin/bash
set -e
set -x

sudo docker images
test -n "${1}"
imageName=${1}
shift

#Don't know why is it needed...
xhost local:

mountDirs="-v ${HOME}/dockerVolumes/dothome:${HOME}"
mountDirsFile=${HOME}/dockerVolumes/${imageName}.vol
if [ -s ${mountDirsFile} ]; then
    mountDirs="$(cat ${mountDirsFile})"
fi
exposePorts=''
runOptions="--rm -it --hostname=${imageName}"
groupId=$(id -g)
userId=$(id -u)
runCommand=''


if [ -n "${1}" ]; then
    filePath=$(readlink -f "${1}")
    shift
    dirName=$(dirname "${filePath}")
    mountDirs="${mountDirs} -v ${dirName}:/magic:ro"
    runCommand=$(basename "${filePath}")
fi

if [[ ${imageName} == "wine"* ]]; then
    runOptions="${runOptions} --privileged"
    groupId=$(awk -F: '/^video:/{print $3}' /etc/group)
fi

if [[ ${imageName} == *"gui" ]]; then
    mountDirs="${mountDirs} -v /tmp/.X11-unix:/tmp/.X11-unix:ro"
fi

if [[ ${imageName} == "dev"* ]]; then
    mountDirs="${mountDirs} -v ${HOME}/github_projects:${HOME}/github_projects"
fi

if [[ ${imageName} == "root"* ]]; then
    userId=0
    groupId=0
    runOptions="$(echo ${runOptions} | sed 's!--rm!!')"
    exposePorts="$(cat ${HOME}/dockerVolumes/${imageName}.port)"
fi

if [[ ${imageName} == "chromium"* ]]; then
    runOptions="${runOptions} " #--cap-add SYS_ADMIN"
fi

if [[ ${imageName} == "playground"* ]]; then
    runOptions="$(echo ${runOptions} | sed 's!--rm!!')"
fi


if [ ${userId} != 0 ]; then
    mountDirs="${mountDirs} -v /etc/passwd:/etc/passwd:ro"
    mountDirs="${mountDirs} -v /etc/group:/etc/group:ro"
else
    HOME=/root
fi

test -z "${1}"
sudo docker run ${runOptions} -u=${userId}:${groupId} \
    -e HOME=${HOME} -e DISPLAY=${DISPLAY} -e SHELL=${SHELL} \
    -e QT_X11_NO_MITSHM=1 \
    ${exposePorts} \
    ${mountDirs} \
    ${imageName} ${runCommand}
